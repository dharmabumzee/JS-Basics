// app.js

var router = require("./router.js");

//Problem: We need a simple way to look at a user's badge count and JavaScript points from a web browser
//Solution: Use Node.js to perform the profile look ups and server out template via HTTP


//Create a webserver

var http = require('http');
http.createServer(function (request, response) {
  router.home(request, response);
  router.user(request, response);
}).listen(3000);
console.log('Server running at http://<workspace-url>/');



//4. Function that handles the reading of files and merge in value
  //read from file and get a string
    //merge values into string


// router.js

//Handle HTTP route GET / and POST / i.e. Home
function home(request, response) {
  //if url == "/" && GET
  if(request.url === "/") {
    //show search
  response.writeHead(200, {'Content-Type': 'text/plain'});
  response.write("Header\n");
  response.write("Search\n");
  response.end('Footer\n');
  }
  //if url == "/" && POST
    //redirect to /:username
}

//Handle HTTP route GET /:username i.e. /dharmabumzee
function user(request, response) {
  //if url == "/...."
  var username = request.url.replace("/", "");
  if(username.length > 0) {
    response.writeHead(200, {'Content-Type': 'text/plain'});
    response.write("Header\n");
  
    
  //get json from Treehouse
  var studentProfile = new Profile(username);
  //on "end"
  studentProfile.on("end", function(profileJSON){
      //show profile
    
    // store values we need
    var values = {
      avatarUrl: profileJSON.gravatar_url,
      username: profileJSON.profile_name,
      baddes: profileJSON.badges.length,
      javascriptPoints: profileJSON.points.JavaScript
     }
      //simple response
      response.write(username.values + " has " + values.badges + "badges\n");
      response.end('Footer\n');
    
  });
   
  //on "error"
  studentProfile.on("error", function(error) {
    //show error
    response.write(error.message + "\n");
    response.end('Footer\n');
  });
  
  }
}







module.exports.home = home;
module.exports.home = user;


